package chuangjianxing.day04_prototype;
/**
 * 原型模式：
 * 		   --通过new产生一个对象需要非常繁琐的数据访问或访问权限，则可以使用原型模式。
 * 		   --就是java中的克隆技术，以某个对象为原型，复制出新的对象。显然，新的对象
 * 			 具备原型对象的特点。
 * 		   --优势：效率高（直接克隆，避免了重复执行构造过程的步骤）
 * 		   --克隆类似于new，但是不同于new，new创建新的对象属性采用默认值，克隆出来的
 * 			 对象的属性完全和原型对象相同，并且，克隆出的新对象改变不会影响原型对象。
 * 
 * 原型模式的实现：
 * 				--Clonable接口的clone()方法
 * 				--原型模式实现起来最困难的地方就是内存复制操作，所幸在java提供了clone()方法，
 * 				  代替我们做了绝大多数事情。然后可以修改克隆对象的值。
 * 
 * 开发中的应用场景：
 * 				--原型模式很少单独出现，一般和工厂模式一起出现，通过clone的方法创建对象，
 * 				  然后由工厂方法提供给调用者。
 * @author HY
 *
 */
public class Info {

}
