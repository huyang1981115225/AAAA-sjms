package chuangjianxing.day03_builder;
/**
 * 建造者模式：
 * 			 
 * 1、场景：
 * 		  --我们要建造一个复杂的产品，比如：神舟飞船，Iphone。这个复杂的产品的创建，
 * 		  	有这样一个问题需要处理：装配这些子组件是不是需要多个步骤？
 * 			
 * 		  --实际开发中，我们所需要的对象构建时，也非常复杂，有很多步骤需要处理。
 * 
 * 2、建造者模式的本质：
 * 					  --分离了对象子组件的单独构造（由Builder来负责）和装配（由Director来负责），
 * 						从而可以构造出复杂的对象。这个模式适用于：某个对象的构造复杂的情况下使用。
 * 
 * 					  --由于实现了构建和装配的解耦。不同的构建器，相同的装配，也可以做出不同的对象；
 * 						相同的构建器，不同的装配顺序，也可以做出不同的对象。也就是实现了构建算法，
 * 						装配算法的解耦，实现了更好的复用。
 * 
 * 3、开发中用用场景：
 * 					1）StringBuilder中的append方法
 *     				2）SQL中的PrepareStatement
 *     				3）JDOM中的DomBuilder和SaxBuilder
 * @author HY
 *
 */
public class Info {

}
